{"ast":null,"code":"export function CalculateWinner(cells) {\n  // Tạo ra 1 mảng chứa các vị trí thắng\n  const lines = [[0, 1, 2],\n  // hàng 1\n  [3, 4, 5],\n  // hàng 2\n  [6, 7, 8],\n  // hàng 3\n  [0, 3, 6],\n  // cột 1\n  [1, 4, 7],\n  // cột 2\n  [2, 5, 8],\n  // cột 3\n  [0, 4, 8],\n  // đường chéo 1\n  [2, 4, 6] // đường chéo 2\n  ];\n\n  // Chủ yếu dùng destructure để lấy ra các giá trị a,b,c xét điều kiện\n\n  for (let index = 0; index < lines.length; index++) {\n    // mảng = mảng[index]\n    const [a, b, c] = lines[index];\n    // Nếu cells[a] có giá trị và cells[a] === cells[b] và cells[a] === cells[c] thì trả về cells[a]\n    if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\n      return cells[a];\n    }\n  }\n  return null;\n}\n_c = CalculateWinner;\nvar _c;\n$RefreshReg$(_c, \"CalculateWinner\");","map":{"version":3,"names":["CalculateWinner","cells","lines","index","length","a","b","c","_c","$RefreshReg$"],"sources":["D:/DevQuanna/devreact/my-app/src/ReactHookUseState/TicTacToe/helper.jsx"],"sourcesContent":["export function CalculateWinner(cells){\r\n    // Tạo ra 1 mảng chứa các vị trí thắng\r\n    const lines = [\r\n        [0,1,2], // hàng 1\r\n        [3,4,5], // hàng 2\r\n        [6,7,8], // hàng 3\r\n        [0,3,6], // cột 1\r\n        [1,4,7], // cột 2\r\n        [2,5,8], // cột 3\r\n        [0,4,8], // đường chéo 1\r\n        [2,4,6] // đường chéo 2\r\n    ];\r\n    \r\n    // Chủ yếu dùng destructure để lấy ra các giá trị a,b,c xét điều kiện\r\n\r\n    for (let index = 0; index < lines.length; index++) {\r\n        // mảng = mảng[index]\r\n        const [a,b,c] = lines[index];\r\n        // Nếu cells[a] có giá trị và cells[a] === cells[b] và cells[a] === cells[c] thì trả về cells[a]\r\n        if(cells[a] && cells[a] === cells[b] && cells[a] === cells[c]){\r\n            return cells[a];\r\n        }\r\n    }\r\n    return null;\r\n}"],"mappings":"AAAA,OAAO,SAASA,eAAeA,CAACC,KAAK,EAAC;EAClC;EACA,MAAMC,KAAK,GAAG,CACV,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAE;EACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAE;EACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAE;EACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAE;EACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAE;EACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAE;EACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAE;EACT,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;EAAA,CACX;;EAED;;EAEA,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,CAACE,MAAM,EAAED,KAAK,EAAE,EAAE;IAC/C;IACA,MAAM,CAACE,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC,GAAGL,KAAK,CAACC,KAAK,CAAC;IAC5B;IACA,IAAGF,KAAK,CAACI,CAAC,CAAC,IAAIJ,KAAK,CAACI,CAAC,CAAC,KAAKJ,KAAK,CAACK,CAAC,CAAC,IAAIL,KAAK,CAACI,CAAC,CAAC,KAAKJ,KAAK,CAACM,CAAC,CAAC,EAAC;MAC1D,OAAON,KAAK,CAACI,CAAC,CAAC;IACnB;EACJ;EACA,OAAO,IAAI;AACf;AAACG,EAAA,GAxBeR,eAAe;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}